<?php


/**
 * Implements hook_hosting_tasks().
 */
function aegir_config_hosting_tasks() {
  $tasks = array();

  $tasks['site']['config_export'] = array(
    'title' => t('Export Config'),
    'description' => t('Exports Drupal 8 Config to files.'),
    'dialog' => TRUE,
  );

  $tasks['site']['config_import'] = array(
    'title' => t('Import Config'),
    'description' => t('Imports Drupal 8 Config from files into the site.'),
    'dialog' => TRUE,
  );

  return $tasks;
}


/**
 * Implements hook_permission().
 */
function aegir_config_permission() {
  return array(
    'create config_export task' => array(
      'title' => t('create config_export task'),
    ),
    'create config_import task' => array(
      'title' => t('create config_import task'),
    ),
  );
}


/**
 * Form for config export.
 * @return mixed
 */
function hosting_task_config_export_form($node) {

  $form['destination'] = array(
    '#type' => 'textfield',
    '#title' => t('Destination Path'),
    '#description' => t('Enter the path to export configuration to.  Leave blank to use %default. May be an absolute path, or relative to Drupal root.', array(
      '%default' => "sites/{$node->title}/private/config/sync",
    ))
  );

  return $form;
}

/**
 * Form for config export.
 * @return mixed
 */
function hosting_task_config_import_form($node) {

  $form['source'] = array(
    '#type' => 'textfield',
    '#title' => t('Source Path'),
    '#description' => t('Enter the path to import configuration from.  Leave blank to use %default. May be an absolute path, or relative to Drupal root.', array(
      '%default' => "sites/{$node->title}/private/config/sync",
    ))
  );

  return $form;
}

/**
 * Implements drush_hook_pre_hosting_task()
 *
 * Runs before the command "hosting-task" is run. Passes "task_args" from
 * the task node into "$task->options" which become drush options.
 */
function drush_aegir_config_pre_hosting_task() {
  $task =& drush_get_context('HOSTING_TASK');
  if ($task->task_type == 'config_export') {
    $task->options['destination'] = $task->task_args['destination'];
  }
  elseif ($task->task_type == 'config_import') {
    $task->options['source'] = $task->task_args['source'];
  }
}

